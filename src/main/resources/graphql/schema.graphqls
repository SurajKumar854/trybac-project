type Query{
    getDriver:[Driver]
    getDriverById(email:String):Driver

    getUsers:[User]
    getUserByEmail(email:String):User
}
type Mutation{
    registerDriver(driver:DriverInput):Driver
    deleteDriverByEmail(email:String):ApiResponse


    registerUser(user:UserInput):User
    deleteUserByEmail(email:String):ApiResponse


}
input DriverInput{
    name :String!
    age : Int!
    mobile :String!
    email :String!
    password :String!
}

type Driver{
    id :ID
    name :String
    age : Int
    mobile :String
    email :String
    password :String
}



input UserInput{
    name :String!
    age : Int!
    mobile :String!
    email :String!
    password :String!
}

type User{
    id :ID
    name :String
    age : Int
    mobile :String
    email :String
    password :String
}

type ApiResponse{
    status :Boolean
    message : String
    error:Int
}


